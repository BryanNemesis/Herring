{"version":3,"sources":["lookup/lookup.js","lookup/components.js","fillets/buttons.js","fillets/detail.js","fillets/list.js","fillets/form.js","fillets/components.js","index.js"],"names":["getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","lookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","open","setRequestHeader","csrftoken","sessionid","withCredentials","onload","status","response","detail","window","location","href","onerror","e","send","apiFilletList","username","ActionButton","fillet","action","handlePerformAction","theme","likeCount","like_count","className","display","type","handleActionBackendEvent","onClick","event","preventDefault","filletId","id","apiFilletAction","Fillet","handleRepost","text","filletTextClassName","is_repost","useState","currentFillet","setCurrentFillet","match","pathname","urlFilletId","groups","isDetail","newFillet","parent","FilletList","newFillets","setNewFillets","fillets","setFillets","filletsInit","setFilletsInit","filletsDidSet","setFilletsDidSet","useEffect","finalFillets","concat","alert","tempNewFillets","unshift","map","x","FilletCreateForm","textAreaRef","React","createRef","handleBackendUpdate","console","log","onSubmit","enteredText","current","value","required","ref","FilletsComponent","userCanPost","FilletDetailComponent","didLookup","setDidLookup","setFillet","handleBackendLookup","apiFilletDetail","createElement","herringElement","getElementById","ReactDOM","render","dataset","querySelectorAll","forEach","container"],"mappings":"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","file":"static/js/main.8f7cf549.chunk.js","sourcesContent":["function getCookie(name) {\r\n  var cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n      var cookies = document.cookie.split(';');\r\n      for (var i = 0; i < cookies.length; i++) {\r\n          var cookie = cookies[i].trim();\r\n          // Does this cookie string begin with the name we want?\r\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n              break;\r\n          }\r\n      }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nfunction lookup(method, endpoint, callback, data) {\r\n    let jsonData\r\n    if (data) {\r\n      jsonData = JSON.stringify(data)\r\n    }\r\n    const xhr = new XMLHttpRequest()\r\n    const url = `http://localhost:8000/api${endpoint}`\r\n    xhr.responseType = 'json'\r\n    xhr.open(method, url)\r\n    xhr.setRequestHeader('Content-Type', 'application/json')\r\n    if (method === 'POST') {\r\n      const csrftoken = getCookie('csrftoken')\r\n      xhr.setRequestHeader('X-CSRFToken', csrftoken)\r\n      const sessionid = getCookie('sessionid')\r\n      xhr.setRequestHeader('X-SessionID', sessionid)\r\n      xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest')\r\n      xhr.withCredentials = true\r\n    }\r\n    xhr.onload = () => {\r\n      if (xhr.status === 403) {\r\n        if (xhr.response.detail === 'Authentication credentials were not provided.') {\r\n          window.location.href = '/login?showLoginRequired=true'\r\n        }\r\n      }\r\n\r\n      callback(xhr.response, xhr.status)\r\n    }\r\n    xhr.onerror = (e) => {\r\n      callback({'message': 'Request failed'}, 400)\r\n    }\r\n    xhr.send(jsonData)\r\n  }\r\n\r\nexport default lookup","import lookup from './lookup'\r\n\r\nexport function apiFilletCreate(newFillet, callback) {\r\n  lookup('POST', '/fillets/create/', callback, {text: newFillet})\r\n}\r\n\r\nexport function apiFilletAction(filletId, action, callback) {\r\n  const data = {id: filletId, action: action}\r\n  lookup('POST', '/fillets/action/', callback, data)\r\n}\r\n\r\nexport function apiFilletList(username, callback) {\r\n  let endpoint = '/fillets'\r\n  if (username) {\r\n    endpoint += `/?username=${username}`\r\n  }\r\n  lookup('GET', endpoint, callback)\r\n}\r\n\r\nexport function apiFilletDetail(filletId, callback) {\r\n  lookup('GET', `/fillets/${filletId}/`, callback)\r\n}\r\n\r\nexport default apiFilletList\r\n","import React from 'react';\r\nimport {apiFilletAction} from '../lookup'\r\n\r\nfunction ActionButton({fillet, action, handlePerformAction, theme}) {\r\n    const likeCount = fillet.like_count ? fillet.like_count : 0\r\n    const className = `btn btn-outline-primary btn-sm ${theme}`\r\n    const display = action.type === 'like' ? `${likeCount} ${action.display}` : action.display\r\n\r\n    const handleActionBackendEvent = (response, status) => {\r\n      if ((status === 200 || status === 201) && handlePerformAction) {\r\n        handlePerformAction(response, status)\r\n      }\r\n    }\r\n    const handleClick = (event) => {\r\n      event.preventDefault()\r\n      apiFilletAction(fillet.id, action.type, handleActionBackendEvent)\r\n    }\r\n  \r\n    return <button className={className} onClick={handleClick}>{display}</button>\r\n  }\r\n\r\nexport default ActionButton","import {React, useState} from 'react'\r\nimport ActionButton from './buttons'\r\n\r\nfunction Fillet({fillet, handleRepost}) {\r\n    const text = fillet.text ? fillet.text : 'reposted'\r\n    const filletTextClassName = fillet.is_repost ? 'px-3 text-muted small' : 'px-3'\r\n    const [currentFillet, setCurrentFillet] = useState(fillet ? fillet : null)\r\n    const path = window.location.pathname\r\n    const match = path.match(/(?<filletId>\\d+)/)\r\n    const urlFilletId = match ? match.groups.filletId : 0\r\n    const isDetail = `${urlFilletId}` === `${fillet.id}`\r\n  \r\n    const handlePerformAction = (newFillet, status) => {\r\n      if (status === 200) {\r\n        setCurrentFillet(newFillet)\r\n      } else if (status === 201) {\r\n        handleRepost(newFillet)\r\n      }\r\n    }\r\n  \r\n    const handleLink = (event) => {\r\n      event.preventDefault()\r\n      window.location.href = `/${fillet.id}`\r\n    }\r\n\r\n    return <div className='col-12 col-md-10 mx-auto border rounded py-2 mb-4'>\r\n      <div>\r\n        <p className={filletTextClassName}>\r\n          <i>{fillet.id}:</i> {text}\r\n        </p>\r\n        {fillet.is_repost &&\r\n        <div className='col-9'><Fillet fillet={currentFillet.parent} handleRepost={handleRepost}/></div>}\r\n      </div>\r\n      {currentFillet && <div className='btn btn-group'>\r\n        <ActionButton\r\n          fillet={currentFillet}\r\n          action={{type: 'like', display: 'Likes'}}\r\n          handlePerformAction={handlePerformAction}\r\n          theme='btn-dark'\r\n        />\r\n        <ActionButton\r\n          fillet={currentFillet}\r\n          action={{type: 'unlike', display: 'Unlike'}}\r\n          handlePerformAction={handlePerformAction}\r\n          theme='btn-dark'\r\n        />\r\n        <ActionButton\r\n          fillet={currentFillet}\r\n          action={{type: 'repost', display: 'Repost'}}\r\n          handlePerformAction={handlePerformAction}\r\n          theme='btn-light'\r\n        />\r\n        {!isDetail && <button onClick={handleLink} className='btn btn-outline-primary btn-sm btn-light'>View</button>}\r\n      </div>}\r\n    </div>\r\n  }\r\n\r\nexport default Fillet","import React, {useEffect, useState} from 'react'\r\nimport {apiFilletList} from '../lookup'\r\nimport Fillet from './detail'\r\n\r\nfunction FilletList({newFillets, setNewFillets, username}) {\r\n    const [fillets, setFillets] = useState([])\r\n    const [filletsInit, setFilletsInit] = useState(newFillets ? newFillets : [])\r\n    const [filletsDidSet, setFilletsDidSet] = useState(false)\r\n    \r\n    useEffect(() => {\r\n      let finalFillets = [...newFillets].concat(filletsInit)\r\n      if (finalFillets.length !== fillets.length) {\r\n        setFillets(finalFillets)\r\n      }\r\n    }, [fillets, newFillets, filletsInit])\r\n  \r\n    useEffect(() => {\r\n      if (!filletsDidSet) {\r\n        const handleFilletListLookup = (response, status) => {\r\n          if (status === 200)\r\n          {\r\n            setFilletsInit(response)\r\n            setFilletsDidSet(true)\r\n          } else {\r\n            alert('You have error :-D')\r\n          }\r\n        }\r\n        apiFilletList(username, handleFilletListLookup)\r\n      }\r\n    }, [filletsInit, filletsDidSet, username])\r\n  \r\n    const handleRepost = (newFillet) => {\r\n      const tempNewFillets = [...newFillets]\r\n      tempNewFillets.unshift(newFillet)\r\n      setNewFillets(tempNewFillets)\r\n    }\r\n  \r\n    return (\r\n      <div> \r\n          {fillets.map((x) => {\r\n            return <Fillet \r\n            fillet={x}\r\n            handleRepost={handleRepost}\r\n            key={x.id} />\r\n          })}\r\n      </div>\r\n    )\r\n  }\r\n  \r\n\r\nexport default FilletList","import React from 'react'\r\nimport {apiFilletCreate} from '../lookup'\r\n\r\nfunction FilletCreateForm({newFillets, setNewFillets}) {\r\n    const textAreaRef = React.createRef()\r\n  \r\n    const handleSubmit = (event) => {\r\n      // api request\r\n      event.preventDefault()\r\n      const enteredText = textAreaRef.current.value\r\n      textAreaRef.current.value = ''\r\n      apiFilletCreate(enteredText, handleBackendUpdate)\r\n    }\r\n  \r\n    const handleBackendUpdate = (response, status) => {\r\n      console.log(response, status)\r\n      // api response handler\r\n      if (status === 201) {\r\n        const tempNewFillets = [...newFillets]\r\n        tempNewFillets.unshift(response)\r\n        setNewFillets(tempNewFillets)\r\n      } else {\r\n        alert('you have error :-D')\r\n      }\r\n    }\r\n  \r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <textarea className='form-control' required={true} ref={textAreaRef}>\r\n        </textarea>\r\n        <button type='submit' className='btn btn-outline-primary btn-sm my-3 btn-dark'>Post</button>\r\n      </form>\r\n    )\r\n  }\r\n\r\nexport default FilletCreateForm","import {React, useEffect, useState} from 'react'\r\nimport FilletList from './list'\r\nimport FilletCreateForm from './form'\r\nimport {apiFilletDetail} from '../lookup'\r\nimport Fillet from './detail'\r\n\r\n\r\nexport function FilletsComponent({username, userCanPost}) {\r\n  const [newFillets, setNewFillets] = useState([])\r\n  userCanPost = userCanPost === 'true' ? true : false\r\n\r\n  return (\r\n  <div className='col-12 mb-3'>\r\n      {userCanPost &&\r\n      <FilletCreateForm newFillets={newFillets} setNewFillets={setNewFillets} />}\r\n      <FilletList newFillets={newFillets} setNewFillets={setNewFillets} username={username} />\r\n  </div>\r\n  )\r\n}\r\n\r\nexport function FilletDetailComponent({filletId}) {\r\n  const [didLookup, setDidLookup] = useState(false)\r\n  const [fillet, setFillet] = useState(null)\r\n\r\n  const handleBackendLookup = (response, status) => {\r\n    if (status === 200) {\r\n      setFillet(response)\r\n    } else {\r\n      alert('Error: could not find fillet.')\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (didLookup === false) {\r\n      apiFilletDetail(filletId, handleBackendLookup)\r\n      setDidLookup(true)\r\n    }\r\n\r\n  }, [didLookup, setDidLookup, filletId])\r\n\r\n  return fillet === null ? null : <Fillet fillet={fillet} handleRepost={() => {}}/>\r\n}\r\n\r\nexport default FilletsComponent","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {FilletsComponent, FilletDetailComponent} from './fillets'\n\nconst e = React.createElement\n\nconst herringElement = document.getElementById('herring')\nif (herringElement) {\n  ReactDOM.render(\n    e(FilletsComponent, herringElement.dataset), herringElement)\n}\n\nconst filletDetailElements = document.querySelectorAll('.herring-detail')\nfilletDetailElements.forEach(container => {\n  ReactDOM.render(\n    e(FilletDetailComponent, container.dataset), container)\n})\n"],"sourceRoot":""}